{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","image","setImage","setIsUploaded","setTypeFile","className","method","type","id","name","onChange","e","target","files","reader","FileReader","onload","result","readAsDataURL","src","accept","defaultChecked","for","value","onClick","alert","window","location","reload","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNA8CeA,MA3Cf,WAEC,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACE,EAAoCF,oBAAS,GAA7C,mBAAmBG,GAAnB,WACA,EAAgCH,mBAAS,IAAzC,mBAAiBI,GAAjB,WAmBF,OACK,sBAAMC,UAAU,OAAhB,SACA,qBAAKA,UAAU,UAAf,SACA,uBAAMA,UAAU,OAAOC,OAAO,OAA9B,UACG,uBAAOD,UAAU,IAAjB,8BAA6C,uBAClD,uBAAOE,KAAK,OAAOC,GAAG,WAAWC,KAAK,aAAaC,SAtBtD,SAA2BC,GACvB,GAAIA,EAAEC,OAAOC,OAASF,EAAEC,OAAOC,MAAM,GAAI,CACpCT,EAAYO,EAAEC,OAAOC,MAAM,GAAGN,MACjC,IAAIO,EAAS,IAAIC,WACjBD,EAAOE,OAAS,SAAUL,GACxBT,EAASS,EAAEC,OAAOK,QAClBd,GAAc,IAEfW,EAAOI,cAAcP,EAAEC,OAAOC,MAAM,MAcwCR,UAAU,SAAQ,uBACjG,qBAAKG,GAAG,cAAcW,IAAKlB,EAAOmB,OAAO,oBAC1C,oBAAGf,UAAU,QAAb,iDAAyD,uBAAzD,wCACE,uBAAOE,KAAK,WAAWE,KAAK,WAAWD,GAAG,WAAWa,eAAe,SACrE,wBAAOC,IAAI,WAAWjB,UAAU,KAAhC,6GAAqI,uBAArI,mGACiE,uBADjE,qGAEsB,uBAFtB,8BAGC,uBAAK,uBAEL,uBAAOE,KAAK,SAASgB,MAAM,SAASlB,UAAU,SAASmB,QAnBvC,WACjBC,MAAM,wBACTC,OAAOC,SAASC,YAkBZ,mBAAGvB,UAAU,QAAb,mDC7BSwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.2c34949b.chunk.js","sourcesContent":["import React,{ useState } from 'react';\nimport './App.css';\n\nfunction App(){\n\n\tconst [image, setImage] = useState(\"\");\n  \tconst [isUploaded, setIsUploaded] = useState(false);\n  \tconst [typeFile, setTypeFile] = useState(\"\");\n\n\tfunction handleImageChange(e) {\n    \tif (e.target.files && e.target.files[0]) {\n      \t   setTypeFile(e.target.files[0].type);\n      \tlet reader = new FileReader();\n      \treader.onload = function (e) {\n        \tsetImage(e.target.result);\n        \tsetIsUploaded(true);\n     \t };\n        reader.readAsDataURL(e.target.files[0]);\n    \t}\n  \t}\n\n\tconst submitHandle = () => {\n    \talert('Successful Submision')\n\t\twindow.location.reload();\n\t\t};\n\n\treturn (\n\t\t    <body className=\"body\">\n\t\t    <div className=\"section\">  \n    \t\t<form className=\"form\" method=\"post\">\n      \t\t\t<label className=\"l\">Upload Document:</label><br/>\n\t\t\t\t<input type=\"file\" id=\"fileItem\" name=\"ChooseFile\" onChange={handleImageChange} className=\"text\"/><br/>\n\t\t\t\t <img id=\"uploadedImg\" src={image} accept=\".jpg,.jpeg,.png\"/>\n\t\t\t\t<p className=\"parah\">Image should of .jpg or .png format <br/>Image should not be more than 5 MB</p>\n\t  \t\t\t<input type=\"checkbox\" name=\"checkbox\" id=\"checkbox\" defaultChecked=\"true\"/>\n\t \t\t\t<label for=\"checkbox\" className=\"l1\">I hereby declare that the information provided in this form is accurate and complete. I confirm <br/>that any information is found incorrect \n            \t\tand/or incomplete that leads a violation of regulations <br/>may initiate legal actions, and I accept that i am the responsible party for any and\n            \t\tall charges, <br/>penalties and violations</label>\n\t  \t\t\t<br/><br/>\n\n\t  \t\t\t<input type=\"button\" value=\"Submit\" className=\"submit\" onClick={submitHandle} />\n\t  \t\t\t<p className=\"parah\">choose file before submitting</p>\n    \t\t</form>\n\t\t</div>\n\t\t</body>);\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}